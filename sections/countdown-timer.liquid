{%- style -%}
  .countdown-timer {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    text-align: center;
  }

  @media screen and (min-width: 750px) {
    .countdown-timer {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .countdown-timer__content {
    max-width: 600px;
    margin: 0 auto;
  }

  .countdown-timer__heading {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    color: {{ settings.colors_text }};
  }

  .countdown-timer__subheading {
    font-size: 1.2rem;
    margin-bottom: 2rem;
    color: {{ settings.colors_text }};
  }

  .countdown-timer__display {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .countdown-timer__unit {
    background: {{ settings.colors_accent_1 }};
    color: white;
    padding: 1rem;
    border-radius: 8px;
    min-width: 80px;
    text-align: center;
  }

  .countdown-timer__number {
    font-size: 2rem;
    font-weight: 700;
    display: block;
  }

  .countdown-timer__label {
    font-size: 0.8rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    margin-top: 0.5rem;
  }

  .countdown-timer__message {
    font-size: 1.1rem;
    color: {{ settings.colors_text }};
    margin-top: 1rem;
  }

  .countdown-timer__expired {
    font-size: 1.5rem;
    font-weight: 600;
    color: {{ settings.colors_accent_1 }};
  }

  @media screen and (max-width: 749px) {
    .countdown-timer__heading {
      font-size: 2rem;
    }
    
    .countdown-timer__subheading {
      font-size: 1rem;
    }
    
    .countdown-timer__display {
      gap: 0.5rem;
    }
    
    .countdown-timer__unit {
      min-width: 60px;
      padding: 0.75rem;
    }
    
    .countdown-timer__number {
      font-size: 1.5rem;
    }
  }
{%- endstyle -%}

<div class="countdown-timer color-{{ section.settings.color_scheme }} gradient" {{ section.shopify_attributes }}>
  <div class="page-width">
    <div class="countdown-timer__content">
      {%- if section.settings.heading != blank -%}
        <h2 class="countdown-timer__heading">{{ section.settings.heading | escape }}</h2>
      {%- endif -%}
      
      {%- if section.settings.subheading != blank -%}
        <p class="countdown-timer__subheading">{{ section.settings.subheading | escape }}</p>
      {%- endif -%}
      
      <div class="countdown-timer__display" id="countdown-display">
        <div class="countdown-timer__unit">
          <span class="countdown-timer__number" id="days">00</span>
          <div class="countdown-timer__label">Days</div>
        </div>
        <div class="countdown-timer__unit">
          <span class="countdown-timer__number" id="hours">00</span>
          <div class="countdown-timer__label">Hours</div>
        </div>
        <div class="countdown-timer__unit">
          <span class="countdown-timer__number" id="minutes">00</span>
          <div class="countdown-timer__label">Minutes</div>
        </div>
        <div class="countdown-timer__unit">
          <span class="countdown-timer__number" id="seconds">00</span>
          <div class="countdown-timer__label">Seconds</div>
        </div>
      </div>
      
      <div class="countdown-timer__message" id="countdown-message">
        {{ section.settings.message | default: 'Hurry! This offer expires soon.' }}
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const endDate = '{{ section.settings.end_date }}';
    const endTime = '{{ section.settings.end_time }}';
    
    if (!endDate || !endTime) return;
    
    const targetDate = new Date(`${endDate}T${endTime}:00`).getTime();
    const display = document.getElementById('countdown-display');
    const message = document.getElementById('countdown-message');
    
    function updateCountdown() {
      const now = new Date().getTime();
      const distance = targetDate - now;
      
      if (distance < 0) {
        display.innerHTML = '<div class="countdown-timer__expired">Offer Expired!</div>';
        message.textContent = '{{ section.settings.expired_message | default: "This offer has ended. Check back for new deals!" }}';
        return;
      }
      
      const days = Math.floor(distance / (1000 * 60 * 60 * 24));
      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((distance % (1000 * 60)) / 1000);
      
      document.getElementById('days').textContent = days.toString().padStart(2, '0');
      document.getElementById('hours').textContent = hours.toString().padStart(2, '0');
      document.getElementById('minutes').textContent = minutes.toString().padStart(2, '0');
      document.getElementById('seconds').textContent = seconds.toString().padStart(2, '0');
    }
    
    // Update immediately
    updateCountdown();
    
    // Update every second
    setInterval(updateCountdown, 1000);
  });
</script>

{% schema %}
{
  "name": "t:sections.countdown-timer.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "Limited Time Offer",
      "label": "t:sections.countdown-timer.settings.heading.label"
    },
    {
      "type": "inline_richtext",
      "id": "subheading",
      "default": "Don't miss out on this amazing deal!",
      "label": "t:sections.countdown-timer.settings.subheading.label"
    },
    {
      "type": "text",
      "id": "end_date",
      "label": "t:sections.countdown-timer.settings.end_date.label",
      "info": "t:sections.countdown-timer.settings.end_date.info",
      "default": "2024-12-31"
    },
    {
      "type": "text",
      "id": "end_time",
      "label": "t:sections.countdown-timer.settings.end_time.label",
      "info": "t:sections.countdown-timer.settings.end_time.info",
      "default": "23:59"
    },
    {
      "type": "textarea",
      "id": "message",
      "default": "Hurry! This offer expires soon.",
      "label": "t:sections.countdown-timer.settings.message.label"
    },
    {
      "type": "textarea",
      "id": "expired_message",
      "default": "This offer has ended. Check back for new deals!",
      "label": "t:sections.countdown-timer.settings.expired_message.label"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "background-1",
          "label": "t:sections.all.colors.background_1.label"
        },
        {
          "value": "background-2",
          "label": "t:sections.all.colors.background_2.label"
        },
        {
          "value": "inverse",
          "label": "t:sections.all.colors.inverse.label"
        },
        {
          "value": "accent-1",
          "label": "t:sections.all.colors.accent_1.label"
        },
        {
          "value": "accent-2",
          "label": "t:sections.all.colors.accent_2.label"
        }
      ],
      "default": "accent-1",
      "label": "t:sections.all.colors.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.section_padding.content"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "t:sections.countdown-timer.presets.name"
    }
  ]
}
{% endschema %}