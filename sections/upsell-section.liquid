{%- style -%}
  .upsell-section {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .upsell-section {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .upsell-section__heading {
    text-align: center;
    margin-bottom: 3rem;
  }

  .upsell-section__grid {
    display: grid;
    grid-template-columns: repeat({{ section.settings.columns_mobile }}, 1fr);
    gap: 1rem;
  }

  @media screen and (min-width: 750px) {
    .upsell-section__grid {
      grid-template-columns: repeat({{ section.settings.columns_desktop }}, 1fr);
      gap: 2rem;
    }
  }

  .upsell-product {
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .upsell-product:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
  }

  .upsell-product__image {
    position: relative;
    overflow: hidden;
    aspect-ratio: 1;
  }

  .upsell-product__image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .upsell-product:hover .upsell-product__image img {
    transform: scale(1.05);
  }

  .upsell-product__content {
    padding: 1.5rem;
  }

  .upsell-product__title {
    font-size: 1.1rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: {{ settings.colors_text }};
  }

  .upsell-product__price {
    font-size: 1.2rem;
    font-weight: 700;
    color: {{ settings.colors_accent_1 }};
    margin-bottom: 1rem;
  }

  .upsell-product__button {
    width: 100%;
    background: {{ settings.colors_accent_1 }};
    color: white;
    border: none;
    padding: 0.8rem 1rem;
    border-radius: 4px;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.3s ease;
  }

  .upsell-product__button:hover {
    background: {{ settings.colors_accent_2 }};
  }

  .upsell-product__button:disabled {
    background: #ccc;
    cursor: not-allowed;
  }
{%- endstyle -%}

<div class="upsell-section color-{{ section.settings.color_scheme }} gradient" {{ section.shopify_attributes }}>
  <div class="page-width">
    {%- if section.settings.heading != blank -%}
      <div class="upsell-section__heading">
        <h2 class="title {{ section.settings.heading_size }}">{{ section.settings.heading | escape }}</h2>
      </div>
    {%- endif -%}

    <div class="upsell-section__grid">
      {%- for product in collections[section.settings.collection].products limit: section.settings.products_to_show -%}
        <div class="upsell-product">
          <div class="upsell-product__image">
            {%- if product.featured_media -%}
              <img
                src="{{ product.featured_media | image_url: width: 400 }}"
                alt="{{ product.featured_media.alt | escape }}"
                loading="lazy"
                width="{{ product.featured_media.width }}"
                height="{{ product.featured_media.height }}"
              >
            {%- endif -%}
          </div>
          
          <div class="upsell-product__content">
            <h3 class="upsell-product__title">
              <a href="{{ product.url }}">{{ product.title | escape }}</a>
            </h3>
            
            <div class="upsell-product__price">
              {% render 'price', product: product, price_class: '' %}
            </div>
            
            <button class="upsell-product__button" 
                    data-product-id="{{ product.id }}"
                    data-variant-id="{{ product.selected_or_first_available_variant.id }}">
              Add to Cart
            </button>
          </div>
        </div>
      {%- else -%}
        {%- for i in (1..section.settings.products_to_show) -%}
          <div class="upsell-product">
            <div class="upsell-product__image">
              {{ 'product-' | append: i | placeholder_svg_tag: 'placeholder-svg' }}
            </div>
            <div class="upsell-product__content">
              <h3 class="upsell-product__title">Related Product {{ i }}</h3>
              <div class="upsell-product__price">$29.99</div>
              <button class="upsell-product__button">Add to Cart</button>
            </div>
          </div>
        {%- endfor -%}
      {%- endfor -%}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const addToCartButtons = document.querySelectorAll('.upsell-product__button');
    
    addToCartButtons.forEach(button => {
      button.addEventListener('click', async function() {
        const productId = this.dataset.productId;
        const variantId = this.dataset.variantId;
        
        if (!variantId) {
          const productCard = this.closest('.upsell-product');
          const productLink = productCard.querySelector('.upsell-product__title a');
          if (productLink) {
            window.location.href = productLink.href;
          }
          return;
        }
        
        this.disabled = true;
        this.textContent = 'Adding...';
        
        try {
          const response = await fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              id: variantId,
              quantity: 1
            })
          });
          
          if (response.ok) {
            this.textContent = 'Added!';
            setTimeout(() => {
              this.disabled = false;
              this.textContent = 'Add to Cart';
            }, 2000);
            
            document.dispatchEvent(new CustomEvent('cart:updated'));
          } else {
            throw new Error('Failed to add to cart');
          }
        } catch (error) {
          console.error('Error adding to cart:', error);
          this.textContent = 'Error';
          setTimeout(() => {
            this.disabled = false;
            this.textContent = 'Add to Cart';
          }, 2000);
        }
      });
    });
  });
</script>

{% schema %}
{
  "name": "t:sections.upsell-section.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "Frequently Bought Together",
      "label": "t:sections.upsell-section.settings.heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "t:sections.upsell-section.settings.collection.label"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 8,
      "step": 1,
      "default": 4,
      "label": "t:sections.upsell-section.settings.products_to_show.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 4,
      "step": 1,
      "default": 4,
      "label": "t:sections.upsell-section.settings.columns_desktop.label"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.upsell-section.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.upsell-section.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.upsell-section.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.section_padding.content"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "t:sections.upsell-section.presets.name"
    }
  ]
}
{% endschema %}